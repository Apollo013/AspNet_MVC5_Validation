@model AspNet_MVC5_Validation.Models.RegisterVM
@{
    ViewBag.Title = "Register";
}

<h2>Register</h2>
<p> Registered Count: @ViewBag.RegisteredUsers</p>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr/>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(r => r.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-lg-10">
                @Html.EditorFor(r => r.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(r => r.Name, "", new {@class="text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor( r => r.Email,  htmlAttributes: new {@class="control-label col-md-2" })
            <div class="col-lg-10">
                @Html.EditorFor(r => r.Email, new { htmlAttributes = new { @class="form-control"} })
                @Html.ValidationMessageFor(r => r.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Register" class="btn btn-primary"/>
            </div>
        </div>
    </div>
}

@section scripts{

        <script type="text/javascript">

        (function ($) {

            // The following sets up standard & unobtrusive validation to add/remove the error class 
            // to the encapsulating 'form-group' when an error occurs.
            var defaultOptions = {
                validClass: 'has-success',
                errorClass: 'has-error',
                highlight: function (element, errorClass, validClass) {
                    $(element).closest(".form-group").removeClass(validClass).addClass(errorClass);
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).closest(".form-group").removeClass(errorClass).addClass(validClass);
                }
            };

            $.validator.setDefaults(defaultOptions);

            $.validator.unobtrusive.options = {
                errorClass: defaultOptions.errorClass,
                validClass: defaultOptions.validClass
            };

        }(jQuery));

    </script>    
}